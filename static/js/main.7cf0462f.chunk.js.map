{"version":3,"sources":["components/Header.js","components/Footer.js","components/List.js","components/ToDos.js","App.js","index.js"],"names":["Header","Footer","year","Date","getFullYear","List","props","console","log","useState","userInput","setUserInput","onSubmit","e","preventDefault","uuidv4","setList","prevState","id","title","trim","done","type","value","onChange","target","ToDos","userToDos","list","map","toDo","i","defaultChecked","check","onClick","remove","App","Fragment","itemToRemove","newArr","filter","item","itemToCheck","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAQeA,EARA,WACb,OACE,8BACE,oECMSC,EATA,WACb,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,8BACE,6CAAgBF,Q,eC4BPG,EA5BF,SAACC,GACZC,QAAQC,IAAIF,GACZ,MAAkCG,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAkBA,OACE,uBAAMC,SAfR,SAAsBC,GACpBA,EAAEC,iBAEFP,QAAQC,IAAIO,eACM,KAAdL,GACFJ,EAAMU,SAAQ,SAACC,GAAD,4BACTA,GADS,CAEZ,CAAEC,GAAIH,cAAUI,MAAOT,EAAUU,OAAQC,MAAM,QAEjDV,EAAa,KAEbA,EAAa,KAIf,UACE,uBAAOW,KAAK,OAAOC,MAAOb,EAAWc,SAnBzC,SAAsBX,GACpBF,EAAaE,EAAEY,OAAOF,UAmBpB,uBAAOD,KAAK,SAASC,MAAM,YCLlBG,EAtBD,SAACpB,GACb,IAAMqB,EAAYrB,EAAMsB,KAAKC,KAAI,SAACC,EAAMC,GAAP,OAC/B,+BACE,uBACET,KAAK,WACLU,eAAgBF,EAAKT,KACrBG,SAAU,kBAAMlB,EAAM2B,MAAMH,EAAKZ,OAElCY,EAAKX,MACN,mBACEe,QAAS,WACP3B,QAAQC,IAAIsB,EAAKZ,IACjBZ,EAAM6B,OAAOL,EAAKZ,KAHtB,4BAPOa,MAiBX,OAAO,6BAAKJ,KCiBCS,MA9Bf,WACE,MAAwB3B,mBAAS,IAAjC,mBAAOmB,EAAP,KAAaZ,EAAb,KAmBA,OACE,eAAC,IAAMqB,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAMrB,QAASA,IACf,cAAC,EAAD,CAAOY,KAAMA,EAAMO,OAtBR,SAACG,GACd,IAAMC,EAASX,EAAKY,QAAO,SAACC,GAAD,OAAUA,EAAKvB,KAAOoB,KACjD/B,QAAQC,IAAI+B,GAEZvB,EAAQuB,IAkB6BN,MAhBzB,SAACS,GAEb1B,GAAQ,SAACC,GACP,OAAOA,EAAUuB,QAAO,SAACC,GAKvB,OAJIA,EAAKvB,KAAOwB,IAEdD,EAAKpB,MAAQoB,EAAKpB,MAEboB,WAST,cAAC,EAAD,QC1BNE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7cf0462f.chunk.js","sourcesContent":["const Header = () => {\n  return (\n    <div>\n      <h1>What are you going to do today?</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","const Footer = () => {\n  const year = new Date().getFullYear();\n  return (\n    <div>\n      <h4>Copyrigths {year}</h4>\n    </div>\n  );\n};\n\nexport default Footer;\n","// Hook\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst List = (props) => {\n  console.log(props);\n  const [userInput, setUserInput] = useState(\"\");\n  function changeHandle(e) {\n    setUserInput(e.target.value);\n  }\n  function submitHandle(e) {\n    e.preventDefault();\n    // prevState - value of the last state before the recent update\n    console.log(uuidv4());\n    if (userInput !== \"\") {\n      props.setList((prevState) => [\n        ...prevState,\n        { id: uuidv4(), title: userInput.trim(), done: false },\n      ]);\n      setUserInput(\"\");\n    } else {\n      setUserInput(\"\");\n    }\n  }\n  return (\n    <form onSubmit={submitHandle}>\n      <input type=\"text\" value={userInput} onChange={changeHandle} />\n      <input type=\"submit\" value=\"Add\" />\n    </form>\n  );\n};\n\nexport default List;\n","const ToDos = (props) => {\n  const userToDos = props.list.map((toDo, i) => (\n    <li key={i}>\n      <input\n        type=\"checkbox\"\n        defaultChecked={toDo.done}\n        onChange={() => props.check(toDo.id)}\n      />\n      {toDo.title}\n      <i\n        onClick={() => {\n          console.log(toDo.id);\n          props.remove(toDo.id);\n        }}\n      >\n        ðŸ—‘\n      </i>\n    </li>\n  ));\n  return <ul>{userToDos}</ul>;\n};\n\nexport default ToDos;\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport List from \"./components/List\";\nimport ToDos from \"./components/ToDos\";\n\nfunction App() {\n  const [list, setList] = useState([]);\n  const remove = (itemToRemove) => {\n    const newArr = list.filter((item) => item.id !== itemToRemove);\n    console.log(newArr);\n    // set List is responsible for\n    setList(newArr);\n  };\n  const check = (itemToCheck) => {\n    // itemCheck has a unique number\n    setList((prevState) => {\n      return prevState.filter((item) => {\n        if (item.id === itemToCheck) {\n          // reverse done\n          item.done = !item.done;\n        }\n        return item;\n      });\n    });\n  };\n  return (\n    <React.Fragment>\n      <Header />\n      <List setList={setList} />\n      <ToDos list={list} remove={remove} check={check} />\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./sass/main.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}